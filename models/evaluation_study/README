>cases_all/, cases_t1/, and cases_t2/ are populated by loaddata.py. When called, by views.py, loaddata performs ETL
(extract, transform, load). The results is that a sub-folder is created for each patient_id. The folder contains the
data structures needed for display.

>eye_tracking/ stores all data collected when a user interacts with the interface. I have included an example folder,
"interface_demo", to show what the contents look like. You will want to create an different folder for each of your
study participants.

>participant_info/ stores one file called participant_info.txt and an additional file for each user (for an example
see interface_dem.txt).  participant_info.txt stores a list of each participant, when they last logged on, etc. Its
content is reflected in the LEMRinterface homescreen where users click on their ID in order to log it. The additional
file lists the case assignments, the time points for those cases, and the experimental conditions under which the case
should be displayed.

>query_saving/ stores a binary representation of each data type. It saves the system from repeating connections
to the database.

>tests stores global parameters. These parameters are created by loaddata.py.